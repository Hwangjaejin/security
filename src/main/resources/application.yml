server:
  port: 8090
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

# 별도의 설정이 없으면 스프링부트가 메모리 모드로 전환시킴. (아래 전체가 다 없어도 테스트 가능)
spring:
  profiles:
    active: local
  datasource:
    #    url: jdbc:h2:mem:test # jdbc:h2:mem:test => 메모리 DB 모드. h2 database 안띄워도 실행됨.
    url: jdbc:h2:tcp://localhost/~/security
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: none       # create : 내가 가지고 있는 entity를 다 drop한 후에 create하고 application을 실행시킴.
    properties:              # create-drop : create와 같고 마지막 application 종료시점에 drop query를 날림.
      hibernate:
        #        show_sql: true      # SQL 로그를 console에 남김
        format_sql: true     # 쿼리를 포맷팅해서 보기좋게 해줌
        use_sql_comments: true
  data:
    web:
      pageable:
        default-page-size: 10 # default : 20
        max-page-size: 2000
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 119113362766-b3ocqdb7spjo2v0cbbnat5ajk319819m.apps.googleusercontent.com
            client-secret: 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
            scope: email, profile
          facebook:
            client-id: 493600429153716
            client-secret: 45973d57719e77a4f5ae4e3f5c65f1f3
            scope: email, public_profile
          naver: # naver는 oauth2-client 라이브러리의 provider가 아니기 때문에 자세히 설정해줘야 한다.
            client-id: JiX_n3J2n_k7J5PXu2gD
            client-secret: PhXkLJAe5Q
            scope: name, email
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8090/login/oauth2/code/naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json으로 받는데 response라는 키값으로 네이버가 리턴해줌.

logging:
  level:
    org.hibernate.SQL: debug # SQL 로그를 파일로 남김
#    org.hibernate.type : trace  # 바인딩되는 파라미터를 볼 수 있음

